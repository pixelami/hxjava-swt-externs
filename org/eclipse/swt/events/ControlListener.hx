package org.eclipse.swt.events;

import java.StdTypes;
@:native("org.eclipse.swt.events.ControlListener")
/**
 * Classes which implement this interface provide methods
 * that deal with the events that are generated by moving
 * and resizing controls. 
 * <p>
 * After creating an instance of a class that implements
 * this interface it can be added to a control using the
 * <code>addControlListener</code> method and removed using
 * the <code>removeControlListener</code> method. When a
 * control is moved or resized, the appropriate method will
 * be invoked.
 * </p>
 *
 * @see ControlAdapter
 * @see ControlEvent
 */
extern interface ControlListener
{
/**
 * Sent when the size (width, height) of a control changes.
 *
 * @param e an event containing information about the resize
 */
	public function controlResized(e:org.eclipse.swt.events.ControlEvent):Void;
/**
 * Sent when the location (x, y) of a control changes relative
 * to its parent (or relative to the display, for <code>Shell</code>s).
 *
 * @param e an event containing information about the move
 */
	public function controlMoved(e:org.eclipse.swt.events.ControlEvent):Void;

}
